---
- name: Set ansible variables
  include_vars: vars/main.yml

- name: Get ip address of hostname
  shell: host {{ inventory_hostname }} | grep 'has address' | awk '{ print $4 }' 
  register: result_host
  delegate_to: localhost

- name: Set hetzner_server_ip_address fact
  set_fact:
    hetzner_server_ip_address: "{{ result_host.stdout }}"

- name: Retrieve first public key fingerprint 
  uri:
    url: https://robot-ws.your-server.de/key
    return_content: yes
    method: GET
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    status_code: 200
  register: key
  delegate_to: localhost

# FIXME: make used public key configurable
- name: Set authorized_key fact
  set_fact:
    authorized_key: "{{ key.json[0].key.fingerprint }}"

- name: Check rescue mode
  uri:
    url: "https://robot-ws.your-server.de/boot/{{ hetzner_server_ip_address }}/rescue"
    method: GET
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    status_code: 200
  register: rescue
  delegate_to: localhost

- name: Activate rescue mode
  when:  rescue.json.rescue.active == false
  uri:
    url: "https://robot-ws.your-server.de/boot/{{ hetzner_server_ip_address }}/rescue"
    method: POST
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    body: "os=linux&arch=64&authorized_key={{ authorized_key }}"
    status_code: 200
    HEADER_Content-Type: "application/x-www-form-urlencoded"
  register: activated
  delegate_to: localhost

- name: Execute hardware reset
  uri:
    url: "https://robot-ws.your-server.de/reset/{{ hetzner_server_ip_address }}"
    method: POST
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    body: "type=hw"
    status_code: 200
    HEADER_Content-Type: "application/x-www-form-urlencoded"
  delegate_to: localhost

- name: Remove server from local known_hosts file
  local_action: command  /usr/bin/ssh-keygen -R {{ inventory_hostname }}
  ignore_errors: yes

- name: Pause a bit for the hardware reset to kick in
  pause: seconds=15

- name: Waiting for server to come back
  local_action: 
    module: wait_for 
      host="{{ inventory_hostname }}"
      port=22 
      delay=10
      timeout=600

- name: Copy autosetup configuration file
  copy:
    src: "{{ hetzner_profile_file }}"
    dest: /autosetup
    owner: root
    group: root
    mode: 0644

- name: Run installimage 
  command: /root/.oldroot/nfs/install/installimage
  register: result

- name: Mount root filesystem
  mount:
    name: /mnt
    src: "{{ hetzner_root_device }}"
    fstype: xfs
    opts: noatime
    state: mounted

- name: Set ssh authorized keys
  authorized_key:
    key: "{{ item }}"
    user: root
    path: /mnt/root/.ssh/authorized_keys
    manage_dir: yes
  with_items: "{{ hetzner_authorized_keys }}"

- name: Reboot server
  shell: sleep 2 && shutdown -r now "triggered by betacloud.hetzner"
  async: 1
  poll: 0
  ignore_errors: yes

- name: Remove server from local known_hosts file
  local_action: command  /usr/bin/ssh-keygen -R {{ inventory_hostname }}
  ignore_errors: yes

- name: Waiting for server to come back
  local_action: 
    module: wait_for 
      host="{{ inventory_hostname }}"
      port=22 
      delay=10
      timeout=600
